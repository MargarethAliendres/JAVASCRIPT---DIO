 Algoritmo "PROCEDIMENTOS"    //PROCEDIMENTO NAO TEM RETORNO

  VAR
  
  resultado: inteiro    //variavel global
                                    //AQUI NAO COLOCA O TIPO DA FUNÇAO
  procedimento somar (i, j : inteiro)     //variavel local  // procedimento nao tem retorno

  inicio
  
  resultado <- i+j

  fimprocedimento

  inicio
  
  somar (10,20)                         //passagem de parametro
  escreval(resultado)
  

 fimalgoritmo



============================================================================================================



 Algoritmo "FUNÇÃO"            // A FUNÇÃO TEM RETORNO

  VAR
                            //A DIFERENÇA É COLOCAR O TIPO DA FUNÇAO
 funcao somar (i, j: inteiro): inteiro            // A FUNÇÃO TEM RETORNO
   inicio
     retorne i + j
 fimfuncao


  inicio
    escreval(somar(10,20))

  fimalgoritmo



EX: 2           

  VAR

 funcao somar (i, j: inteiro): inteiro            // A FUNÇÃO TEM RETORNO
   inicio
     retorne i + j
 fimfuncao

  funcao testar (): inteiro                   //sem valor
    retorne (somar(50,50) + 40)             //uma função chamando outra função
  fimfuncao

   inicio
    escreval(somar(10,20))
    escreval(testar())

fimalgoritmo

===========================================================================================================
          Algoritmo "FUNÇAO/PROCEDIMENTO"  -  (EX TRIANGULO)

       //   c/retorno  sem retorno
     //É MESMO QUE METÓDO  A FUNÇÃO TEM RETORNO   PODE OU NAO TER RETORNO

var  //
   //variaveis globais, nao vai precisar passar parametros p/ as funções/procedimento e podem ser usadas nestes.
   lado1, lado2, lado3: inteiro
   //so vai ler dados, nao tem resposta, nao tem retorno
  procedimento lerDados ()
    inicio  //{
   //entrada de dados
      escreval ("lado1: ")
        leia(lado1)
      escreval ("lado2: ")
        leia(lado2)
      escreval ("lado3: ")
        leia(lado3)
  fimprocedimento

  funcao verificarIntegridadeTriangulo(): logico
     inicio //{
      se (lado1> lado2 +lado3) OU (lado2> lado1+lado3) OU ( lado3>lado1+lado2) entao
       retorne falso
      senao
       retorne verdadeiro
     fimse
  fimfuncao

  funcao verificarTipotriangulo():caractere
      inicio  //{
      se (lado1 = lado2) E (lado2=lado3) entao
      retorne "Equilatero"
      senao
      se (lado1 = lado2 ) OU (lado2 = lado3) OU (lado1=lado3) entao
      retorne "isoceles"
      senao
      retorne "escaleno"

      fimse
      fimse
  fimfuncao

inicio    //PUBLIC STATIC VOID MAIN
        //entrada de dados  ////processamento

  lerDados()                                    //PROGRAMA PRINCIPAL
  se verificarIntegridadeTriangulo() entao
    escreval( verificarTipotriangulo())
  senao
     escreval("não e triangulo")
  fimse

fimalgoritmo


===========================================================================================================



